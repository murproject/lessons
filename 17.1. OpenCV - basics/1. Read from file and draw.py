# Начнём работу с OpenCV.
# Импортируем библиотеку и выведем в консоли ее версию.

from datetime import datetime
import cv2
print('OpenCV version:', cv2.__version__)

# Загрузим изображение из файла и отобразим его в окне.
img = cv2.imread('imgs/pool_line_bin.jpg')
cv2.imshow('original', img)

# После отображения окон нужно будет вызвать функцию cv2.waitKey,
# но мы это сделаем позднее (т.к. будем отображать ещё кадры)

# Обрезка изображения. Получим квадратный фрагмент
# размером 300 на 100 пикселей с начальной точкой (50, 50),
# таким образом, конечная точка будет (350, 150).
# Сначала указывается диапазон для y, затем для x.
img_cropped = img[50:150, 50:350]
cv2.imshow('cropped', img_cropped)

# Получаем размеры исходного изображения.
height, width = img.shape[0], img.shape[1]

# Изменение размера изображения. Уменьшаем картинку в два раза.
new_size = (int(width / 2), int(height / 2))
img_resized = cv2.resize(img, new_size)
cv2.imshow('resized', img_resized)

# Зеркальное отражение.
# Вторым аргументом задаётся режим отражения:
# 0 - вертикальное, 1 - горизонтальное, -1 - обе оси.
img_flipped = cv2.flip(img, -1)
cv2.imshow('flipped', img_flipped)

# Создадим копию изображения, на которой будем рисовать.
drawing = img.copy()

# Линия. Указываем целевое изображение, начальные и конечные координаты,
# цвет и толщину обводки.
cv2.line(drawing, (10,10), (width - 10,10), (0,255,255), 2)

# Прямоугольник.
# Можно указать -1 в качестве толщины обводки для заполнения.
cv2.rectangle(drawing, (10,30), (40,60), (0,255,0),  2)
cv2.rectangle(drawing, (50,30), (80,60), (0,255,0), -1)

# Окружность. Указываем начальные координаты, радиус цвет,
# и толщину обводки с возможностью задать -1 для заполнения.
cv2.circle(drawing, (110, 45), 15, (255,255,0),  2)
cv2.circle(drawing, (150, 45), 15, (255,255,0), -1)

# Текст. Задаём строку с текстом, начальыне координаты, шрифт,
# размер шрифта, цвет и толщину обводки. В OpenCV есть несколько
# встроенных шрифтов, но при необходимости можно загрузить свои.
font = cv2.FONT_HERSHEY_DUPLEX
cv2.putText(drawing, 'Hello world!', (180, 55), font, 1, (255,255,255), 1)

# Выведем текущие дату и вермя.
timestamp = datetime.now().strftime('%Y-%m-%d_%H-%M-%S')
cv2.putText(drawing, timestamp, (10, 100), font, 1, (255,255,255), 1)

cv2.imshow('drawing', drawing)

# Сохраняем изображение с текущей датой и временем в имени файла
cv2.imwrite('drawing_{}.jpg'.format(timestamp), drawing)

# Вызываем команду для ожидания нажатия клавиши.
# это нужно, чтобы окно не закрывалось сразу после выполнения.
cv2.waitKey(0)

# Закрываем все созданные окна.
cv2.destroyAllWindows()