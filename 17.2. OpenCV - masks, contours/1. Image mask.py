# Пример выделения из изображения маски по цвету,
# с загрузкой изображения из файла.

import cv2

# Загружаем и выводим изображение.
img = cv2.imread('imgs/pool_line_bin.jpg')
cv2.imshow('img', img)

# Конвертируем изображение, чтобы получить его в формате HSV.
hsv_image = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)

# Определим диапазон цветов, которые будем выделять.
# Значение оттенка 30 примерно соответствует жёлтому цвету,
# и при выделении оттенков от 0 до 30 мы выделим
# оттенки от красного до оранжевого.
#
# Обратите внимание, значения оттенка могут принимать значения
# от 0 до 180, а остальные параметры - от 0 до 255.
#
# Это лишь демонстрационный пример, и для реального использования
# придётся более детально подбирать эти параметры.

color = (
    #  H    S    V
    (  0,   0,   0),    # минимальная граница значений
    ( 30, 255, 255),    # максимальные значения
)

# Создадим маску с использованием заданного диапазона.
img_mask = cv2.inRange(hsv_image, color[0], color[1])
cv2.imshow('img_mask', img_mask)

# Для наглядной визуализации, объединим оригинальное изображение
# и поулченную маску таким образом, чтобы выделенные пиксели
# имели свой изначальный цвет, а остальные останутся чёрными.
img_mixed = cv2.bitwise_and(img, img, mask=img_mask)
cv2.imshow('img_mixed', img_mixed)

cv2.waitKey(0)
